#include<iostream>
#include<string.h>

using namespace std;

class Info {
public:
    char name[30], year[3], add[30], dob[10];
    float marks;
    long tel_no;

    Info();  // Default constructor
    void accept();
    void display();
    static int count();
};

int Info::cnt = 0;

Info::Info() {
    strcpy(name, "Default");
    strcpy(year, "FE");
    strcpy(add, "Default");
    marks = 0;
    tel_no = 10;
    strcpy(dob, "1/1/90");
}

void Info::accept() {
    cout << "Enter the name: "; cin >> name;
    cout << "Enter the address: "; cin >> add;
    cout << "Enter the year: "; cin >> year;
    cout << "Enter telephone number: "; cin >> tel_no;
    cout << "Enter Marks: "; cin >> marks;
    cout << "Enter date of birth: "; cin >> dob;
}

void Info::display() {
    cout << "\n\nName: " << name;
    cout << "\nAddress: " << add;
    cout << "\nYear: " << year;
    cout << "\nTelephone number: " << tel_no;
    cout << "\nMarks: " << marks;
    cout << "\nDate of birth: " << dob;
}

int Info::count() {
    cnt = cnt + 1;
    return cnt;
}

int main() {
    int ch, n, ch1, pos, temp, flag = 0;
    Info o[50];

    do {
        cout << "\n\n==============";
        cout << "\n    MENU";
        cout << "\n==============";
        cout << "\n1. Accept";
        cout << "\n2. Display";
        cout << "\n3. Insert record";
        cout << "\n4. Search record";
        cout << "\n5. Delete record";
        cout << "\n6. Exit";
        cout << "\nEnter your choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
                cout << "\n1. Inbuilt record..?";
                cout << "\n2. New record..?";
                cin >> ch1;

                switch (ch1) {
                    case 1:
                        Info a1;
                        cout << "\nDefault values initialized";
                        n = Info::count();
                        break;
                    case 2:
                        o[Info::count()].accept();
                        break;
                }
                break;

            case 2:
                for (int i = 0; i < n; i++) {
                    o[i].display();
                }
                break;

            case 3:
                cout << "\nEnter the position to insert record: ";
                cin >> pos;
                n = Info::count();
                pos = pos - 1;

                for (int i = n; i >= pos; i--) {
                    temp = pos;
                    o[i + 1] = o[i];
                }

                o[temp].accept();
                break;

            case 4:
                char name[30];
                cout << "Enter the name to be searched: ";
                cin >> name;

                for (int i = 0; i < n; i++) {
                    if (strcmp(name, o[i].name) == 0) {
                        flag = 1;
                        o[i].display();
                        break;
                    }
                }

                if (flag == 0)
                    cout << "Sorry.. Record not found";
                break;

            case 5:
                cout << "\nEnter the position to delete record: ";
                cin >> pos;
                pos = pos - 1;

                for (int i = pos; i < n; i++) {
                    temp = pos;
                    o[i] = o[i + 1];
                }

                cout << "\nRecord is deleted..";
                n = Info::cnt - 1;
                break;

            case 6:
                break;
        }
    } while (ch != 6);

    return 0;
}
